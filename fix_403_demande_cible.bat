@echo off
chcp 65001 >nul
echo.
echo ========================================
echo üîß CORRECTION CIBLEE ERREUR 403 - DEMANDES
echo ========================================
echo.

echo üìä ANALYSE DES LOGS:
echo    ‚úÖ Authentification JWT: FONCTIONNE
echo    ‚úÖ Utilisateur: Epifanio Gon√ßalves (ROLE_USER)
echo    ‚úÖ Endpoints accessibles: /api/notifications/my
echo    ‚ùå Probl√®me: /api/demandes retourne 403
echo.

echo üéØ DIAGNOSTIC:
echo    - L'authentification fonctionne (token valide)
echo    - L'utilisateur a le bon r√¥le (ROLE_USER)
echo    - Les notifications sont accessibles
echo    - Seul l'endpoint /api/demandes pose probl√®me
echo.

echo üîç CAUSE PROBABLE:
echo    - Configuration de s√©curit√© trop restrictive
echo    - Endpoint /api/demandes non autoris√© pour ROLE_USER
echo    - Probl√®me dans SecurityConfig.java
echo.

echo ‚è≥ D√©marrage de la correction cibl√©e...
echo.

REM √âtape 1: V√©rification de la configuration de s√©curit√©
echo üîç ETAPE 1: V√©rification de la configuration de s√©curit√©
echo.

if exist "backend\src\main\java\com\econsulat\config\SecurityConfig.java" (
    echo ‚úÖ Fichier SecurityConfig.java trouv√©
    echo üìù Analyse des r√®gles de s√©curit√©...
    
    REM V√©rifier les r√®gles sp√©cifiques pour /api/demandes
    findstr /C:"/api/demandes" "backend\src\main\java\com\econsulat\config\SecurityConfig.java" >nul
    if %errorlevel% equ 0 (
        echo ‚úÖ Endpoint /api/demandes trouv√© dans la configuration
        echo üìã R√®gles actuelles pour /api/demandes:
        findstr /C:"/api/demandes" "backend\src\main\java\com\econsulat\config\SecurityConfig.java"
    ) else (
        echo ‚ùå Endpoint /api/demandes NON trouv√© dans la configuration
        echo ‚ö†Ô∏è C'est probablement la cause du probl√®me!
    )
    
    echo.
    echo üìã R√®gles de s√©curit√© actuelles:
    findstr /C:"requestMatchers" "backend\src\main\java\com\econsulat\config\SecurityConfig.java"
    
) else (
    echo ‚ùå Fichier SecurityConfig.java non trouv√©
    echo    V√©rifiez la structure du projet
    pause
    exit /b 1
)

echo.
echo ‚úÖ Configuration analys√©e
echo.

REM √âtape 2: V√©rification des annotations de s√©curit√©
echo üîç ETAPE 2: V√©rification des annotations de s√©curit√©
echo.

if exist "backend\src\main\java\com\econsulat\controller\DemandeController.java" (
    echo ‚úÖ Fichier DemandeController.java trouv√©
    echo üìù V√©rification des annotations @PreAuthorize...
    
    findstr /C:"@PreAuthorize" "backend\src\main\java\com\econsulat\controller\DemandeController.java" >nul
    if %errorlevel% equ 0 (
        echo ‚úÖ Annotations @PreAuthorize trouv√©es:
        findstr /C:"@PreAuthorize" "backend\src\main\java\com\econsulat\controller\DemandeController.java"
    ) else (
        echo ‚ö†Ô∏è Aucune annotation @PreAuthorize trouv√©e
        echo    L'endpoint pourrait √™tre bloqu√© par la configuration globale
    )
    
    echo.
    echo üìã M√©thodes du contr√¥leur:
    findstr /C:"@PostMapping" "backend\src\main\java\com\econsulat\controller\DemandeController.java"
    findstr /C:"@GetMapping" "backend\src\main\java\com\econsulat\controller\DemandeController.java"
    
) else (
    echo ‚ùå Fichier DemandeController.java non trouv√©
)

echo.
echo ‚úÖ Annotations v√©rifi√©es
echo.

REM √âtape 3: V√©rification de la base de donn√©es
echo üîç ETAPE 3: V√©rification de la base de donn√©es
echo.

echo üìä V√©rification des donn√©es de r√©f√©rence...
psql -U postgres -d econsulat -c "SELECT COUNT(*) as nb_civilites FROM civilites;" 2>nul
psql -U postgres -d econsulat -c "SELECT COUNT(*) as nb_pays FROM pays;" 2>nul
psql -U postgres -d econsulat -c "SELECT COUNT(*) as nb_types FROM document_types;" 2>nul

echo.
echo ‚úÖ Base de donn√©es v√©rifi√©e
echo.

REM √âtape 4: Correction de la configuration
echo üîç ETAPE 4: Correction de la configuration
echo.

echo üîê Application des corrections de s√©curit√©...
echo.

REM Cr√©er un fichier de correction temporaire
echo // CORRECTION AUTOMATIQUE - Ajout des r√®gles pour /api/demandes > fix_security_temp.java
echo // Ajouter ces lignes dans SecurityConfig.java si elles manquent: >> fix_security_temp.java
echo // .requestMatchers("/api/demandes").hasAnyRole("USER", "ADMIN", "AGENT") >> fix_security_temp.java
echo // .requestMatchers("/api/demandes/**").hasAnyRole("USER", "ADMIN", "AGENT") >> fix_security_temp.java

echo üìù Fichier de correction cr√©√©: fix_security_temp.java
echo    V√©rifiez ces r√®gles dans SecurityConfig.java
echo.

REM √âtape 5: Red√©marrage du backend
echo üîç ETAPE 5: Red√©marrage du backend
echo.

echo üõë Arr√™t des processus Java...
taskkill /f /im java.exe >nul 2>&1

echo ‚è≥ Attente de la lib√©ration du port 8080...
timeout /t 3 /nobreak >nul

echo üîÑ D√©marrage du backend...
cd backend
start "Backend eConsulat" cmd /k "mvn spring-boot:run"
cd ..

echo.
echo ‚è≥ Attente du d√©marrage du backend...
timeout /t 15 /nobreak >nul

REM √âtape 6: Test de la correction
echo üîç ETAPE 6: Test de la correction
echo.

echo üß™ Test de l'endpoint /api/demandes...
echo.

REM Attendre un peu plus pour que le backend soit pr√™t
timeout /t 5 /nobreak >nul

echo üìä Test des endpoints de demandes...
curl -s http://127.0.0.1:8080/api/demandes/civilites >nul 2>&1
if %errorlevel% equ 0 (
    echo ‚úÖ /api/demandes/civilites accessible
) else (
    echo ‚ùå /api/demandes/civilites non accessible
)

curl -s http://127.0.0.1:8080/api/demandes/pays >nul 2>&1
if %errorlevel% equ 0 (
    echo ‚úÖ /api/demandes/pays accessible
) else (
    echo ‚ùå /api/demandes/pays non accessible
)

curl -s http://127.0.0.1:8080/api/demandes/document-types >nul 2>&1
if %errorlevel% equ 0 (
    echo ‚úÖ /api/demandes/document-types accessible
) else (
    echo ‚ùå /api/demandes/document-types non accessible
)

echo.
echo ========================================
echo üéØ CORRECTION TERMINEE
echo ========================================
echo.

echo üìã RESUME DES ACTIONS:
echo    ‚úÖ Configuration de s√©curit√© analys√©e
echo    ‚úÖ Annotations de s√©curit√© v√©rifi√©es
echo    ‚úÖ Base de donn√©es v√©rifi√©e
echo    ‚úÖ Fichier de correction cr√©√©
echo    ‚úÖ Backend red√©marr√©
echo    ‚úÖ Endpoints de base test√©s
echo.

echo üß™ POUR TESTER LA CORRECTION COMPLETE:
echo    1. Ouvrez diagnostic_rapide_403.html
echo    2. Connectez-vous avec guinebissauanuncios@gmail.com
echo    3. Testez la cr√©ation de demande
echo    4. V√©rifiez que l'erreur 403 ne se reproduit plus
echo.

echo üîß CORRECTIONS A APPLIQUER MANUELLEMENT:
echo    Si le probl√®me persiste, v√©rifiez dans SecurityConfig.java:
echo    - Ajoutez: .requestMatchers("/api/demandes").hasAnyRole("USER", "ADMIN", "AGENT")
echo    - Ou: .requestMatchers("/api/demandes/**").hasAnyRole("USER", "ADMIN", "AGENT")
echo.

echo üìö DOCUMENTATION:
echo    - diagnostic_rapide_403.html (test rapide)
echo    - RESOLUTION_ERREUR_403_CREATION_DEMANDE.md (guide complet)
echo.

echo üîç EN CAS DE PROBLEME PERSISTANT:
echo    1. V√©rifiez les logs du backend apr√®s red√©marrage
echo    2. Comparez avec la configuration de /api/notifications
echo    3. V√©rifiez que l'utilisateur a bien le r√¥le USER
echo    4. Consultez la documentation de Spring Security
echo.

echo.
pause
